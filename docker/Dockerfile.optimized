# ATS Document Converter - Optimized Version
# Debian slim-based image with minimal dependencies

# Build arguments for labels
ARG GIT_SHA="unknown"
ARG VENDOR="DohDa Labs"

FROM python:3.13-slim AS builder

# Set shell with pipefail for better error handling
SHELL ["/bin/bash", "-o", "pipefail", "-c"]

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    pkg-config \
    libcairo2-dev \
    libpango1.0-dev \
    libgdk-pixbuf-xlib-2.0-dev \
    libffi-dev \
    libjpeg-dev \
    libpng-dev \
    libfreetype6-dev \
    libharfbuzz-dev \
    libfribidi-dev \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Install uv using the official installer (faster and more reliable)
RUN curl -LsSf https://astral.sh/uv/install.sh | sh
ENV PATH="/root/.local/bin:$PATH"

# Verify uv installation
RUN uv --version

# Set up project
WORKDIR /build
COPY pyproject.toml uv.lock* ./
COPY src/ ./src/
RUN printf '# ATS PDF Generator\n\nConvert Markdown documents to ATS-optimized PDFs for job applications.\n' > README.md

# Create virtual environment and install dependencies using uv sync
RUN uv sync --frozen --no-dev

# Stage 2: Runtime stage
FROM python:3.13-slim

# Re-declare build arguments for this stage
ARG GIT_SHA="unknown"
ARG VENDOR="DohDa Labs"

# Set shell with pipefail for better error handling
SHELL ["/bin/bash", "-o", "pipefail", "-c"]

# Install runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    pandoc \
    fonts-liberation \
    fonts-noto-color-emoji \
    fonts-dejavu-core \
    ghostscript \
    libcairo2 \
    libpango-1.0-0 \
    libgdk-pixbuf-xlib-2.0-0 \
    libffi8 \
    libjpeg62-turbo \
    libpng16-16 \
    libfreetype6 \
    libharfbuzz0b \
    libfribidi0 \
    libpangoft2-1.0-0 \
    libpangocairo-1.0-0 \
    libgobject-2.0-0 \
    libglib-2.0-0 \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean \
    && fc-cache -f

# Copy virtual environment from builder
COPY --from=builder /build/.venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV LC_ALL=C.UTF-8
ENV LANG=C.UTF-8

# Add OCI image labels
LABEL org.opencontainers.image.source="https://github.com/dohdalabs/ats-pdf-generator" \
      org.opencontainers.image.description="Convert Markdown to ATS-optimized PDFs" \
      org.opencontainers.image.licenses="MIT" \
      org.opencontainers.image.revision="${GIT_SHA}" \
      org.opencontainers.image.title="ATS PDF Generator" \
      org.opencontainers.image.vendor="${VENDOR}"

# Create app directory
WORKDIR /app

# Create directories for input/output (CRITICAL: This was missing in original!)
RUN mkdir -p /app/input /app/output /app/templates /app/css /app/tmp

# Create a non-root user
RUN useradd -m -s /bin/bash converter && \
    chown -R converter:converter /app

# Copy the Python script and templates (WORKDIR is already set)
COPY --chown=converter:converter src/ats_pdf_generator/ats_converter.py ./
COPY --chown=converter:converter templates/ /app/templates/

# Make the script executable
RUN chmod +x /app/ats_converter.py

# Verify the file exists and is executable
RUN ls -la /app/ats_converter.py

# Switch to non-root user
USER converter

# Set the entrypoint
ENTRYPOINT ["python3", "/app/ats_converter.py"]

# Default command (can be overridden)
CMD ["--help"]
