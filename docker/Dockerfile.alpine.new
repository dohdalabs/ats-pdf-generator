# ATS Document Converter - Alpine Linux Version
# Ultra-minimal image using Alpine Linux

FROM python:3.13-alpine AS builder

# Set shell with pipefail for better error handling
SHELL ["/bin/sh", "-o", "pipefail", "-c"]

# Install build dependencies and uv
RUN apk add --no-cache \
    build-base \
    pkgconfig \
    cairo-dev \
    pango-dev \
    gdk-pixbuf-dev \
    libffi-dev \
    jpeg-dev \
    libpng-dev \
    freetype-dev \
    harfbuzz-dev \
    fribidi-dev \
    musl-dev \
    curl

# Install uv using pip (more reliable in Docker)
RUN pip install --no-cache-dir uv==0.7.3
ENV PATH="/root/.local/bin:$PATH"

# Verify uv installation
RUN uv --version

# Create virtual environment with uv
RUN uv venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install Python dependencies
WORKDIR /build
COPY pyproject.toml .
COPY src/ ./src/
RUN printf '# ATS PDF Generator\n\nConvert Markdown documents to ATS-optimized PDFs for job applications.\n' > README.md

# Install dependencies
RUN uv pip install --no-deps . && uv pip install weasyprint

# Stage 2: Runtime stage
FROM python:3.13-alpine

# Set shell with pipefail for better error handling
SHELL ["/bin/sh", "-o", "pipefail", "-c"]

# Install runtime dependencies
RUN apk add --no-cache \
    pandoc \
    fontconfig \
    ttf-liberation \
    ttf-dejavu \
    ghostscript \
    cairo \
    pango \
    gdk-pixbuf \
    libffi \
    jpeg \
    libpng \
    freetype \
    harfbuzz \
    fribidi \
    fontconfig-dev \
    && fc-cache -fv

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV LC_ALL=C.UTF-8
ENV LANG=C.UTF-8

# Create app directory
WORKDIR /app

# Create directories for input/output (CRITICAL: This was missing in original!)
RUN mkdir -p /app/input /app/output /app/templates /app/css /app/tmp

# Create a non-root user
RUN adduser -D converter && \
    chown -R converter:converter /app

# Copy the Python script (WORKDIR is already set)
COPY --chown=converter:converter src/ats_converter.py ./

# Make the script executable
RUN chmod +x /app/ats_converter.py

# Verify the file exists and is executable
RUN ls -la /app/ats_converter.py

# Switch to non-root user
USER converter

# Set the entrypoint
ENTRYPOINT ["python3", "/app/ats_converter.py"]

# Default command (can be overridden)
CMD ["--help"]
