[env]
PYTHONUNBUFFERED = "1"
LC_ALL = "C.UTF-8"
LANG = "C.UTF-8"

[tools]
python = "3.13.7"
uv = "latest"
shellcheck = "latest"
hadolint = "2.12.1-beta"

[tasks]
# Environment setup
install = "uv sync && uv run pre-commit install && uv run pre-commit install --hook-type commit-msg"
install-prod = "uv sync --frozen --no-dev"
setup-local = "scripts/setup-local-env.sh"
uv-sync = "uv sync"
uv-sync-frozen = "uv sync --frozen"

# Code quality (individual)
lint = "uv run ruff check ."
format = "uv run ruff format ."
typecheck = "uv run mypy src/ats_pdf_generator/"
test = "uv run pytest"
shell-lint = "shellcheck install.sh src/*.sh || true"
docker-lint = "hadolint --ignore DL3008,DL3009,DL3018,DL3045,DL4006 docker/Dockerfile.optimized docker/Dockerfile.alpine docker/Dockerfile.dev || true"

# Comprehensive quality checks
quality-check = "scripts/quality-check.sh"

# PDF conversion
convert = "scripts/convert-pdf.sh"

# Docker operations
build-image = "scripts/build-dev-image.sh"
build-test = "scripts/build-and-test.sh"
docker-shell = "docker run --rm -it -v \"$(pwd):/app\" -w /app ats-pdf-generator:dev bash"
docker-clean = "docker rmi ats-pdf-generator:dev 2>/dev/null || true"

# Publishing
setup-auth = "scripts/setup-docker-auth.sh"
publish = "scripts/publish.sh"
publish-image = "scripts/publish-image.sh"

# Pre-commit
pre-commit = "uv run pre-commit run --all-files"

# UV-specific tasks
uv-info = "uv --version && echo 'Python:' && uv run python --version && echo 'Virtual env:' && uv run which python"
uv-tree = "uv tree"
uv-lock = "uv lock"
uv-add = "uv add"
uv-remove = "uv remove"
uv-update = "uv lock --upgrade"
