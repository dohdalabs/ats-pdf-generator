name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CI: true

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Publish all image variants (standard, alpine, dev)
        run: |
          echo "ðŸš€ Publishing all image variants for release ${{ steps.version.outputs.VERSION }}"

          # Publish standard image (multi-arch)
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --push \
            -f docker/Dockerfile.standard \
            -t dohdalabs/ats-pdf-generator:${{ steps.version.outputs.VERSION }} \
            -t dohdalabs/ats-pdf-generator:latest \
            -t dohdalabs/ats-pdf-generator:standard \
            -t ghcr.io/${{ github.repository_owner }}/ats-pdf-generator:${{ steps.version.outputs.VERSION }} \
            -t ghcr.io/${{ github.repository_owner }}/ats-pdf-generator:latest \
            -t ghcr.io/${{ github.repository_owner }}/ats-pdf-generator:standard \
            --build-arg GIT_SHA=${{ github.sha }} \
            --build-arg VENDOR="DohDa Labs" \
            .

          # Publish alpine image (multi-arch)
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --push \
            -f docker/Dockerfile.alpine \
            -t dohdalabs/ats-pdf-generator:alpine-${{ steps.version.outputs.VERSION }} \
            -t dohdalabs/ats-pdf-generator:alpine \
            -t ghcr.io/${{ github.repository_owner }}/ats-pdf-generator:alpine-${{ steps.version.outputs.VERSION }} \
            -t ghcr.io/${{ github.repository_owner }}/ats-pdf-generator:alpine \
            --build-arg GIT_SHA=${{ github.sha }} \
            --build-arg VENDOR="DohDa Labs" \
            .

          # Publish dev image (multi-arch)
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --push \
            -f docker/Dockerfile.dev \
            -t dohdalabs/ats-pdf-generator:dev-${{ steps.version.outputs.VERSION }} \
            -t dohdalabs/ats-pdf-generator:dev \
            -t ghcr.io/${{ github.repository_owner }}/ats-pdf-generator:dev-${{ steps.version.outputs.VERSION }} \
            -t ghcr.io/${{ github.repository_owner }}/ats-pdf-generator:dev \
            --build-arg GIT_SHA=${{ github.sha }} \
            --build-arg VENDOR="DohDa Labs" \
            .

          echo "âœ… All image variants published successfully!"

      - name: Generate changelog
        id: changelog
        run: |
          # Generate changelog from git log
          CHANGELOG=$(git log $(git describe --tags --abbrev=0 HEAD^)..HEAD --pretty=format:"- %s" --no-merges)
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            ## Changes in this release

            ${{ steps.changelog.outputs.changelog }}

            ## Docker Images

            ### Optimized (Recommended)
            ```bash
            docker pull dohdalabs/ats-pdf-generator:${{ github.ref_name }}
            ```

            ### Alpine (Minimal)
            ```bash
            docker pull dohdalabs/ats-pdf-generator:${{ github.ref_name }}-alpine
            ```

            ## Usage
            ```bash
            docker run --rm -v $(pwd):/app dohdalabs/ats-pdf-generator:${{ github.ref_name }} input.md -o output.pdf
            ```

            ## What's New
            - Check the [CHANGELOG.md](CHANGELOG.md) for detailed changes
            - View the [documentation](README.md) for usage instructions
          draft: false
          prerelease: false

      - name: Update Docker Hub Description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: dohdalabs/ats-pdf-generator
          short-description: "Convert Markdown documents to ATS-optimized PDFs for job applications"
          readme-filepath: ./README.md
