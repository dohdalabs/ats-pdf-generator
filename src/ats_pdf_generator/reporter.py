"""
ATS Safety Validation Reporter

Generates markdown reports for ATS safety validation results.
"""

# Standard library
from datetime import datetime
from pathlib import Path

# First-party
from ats_pdf_generator.validation_types import Violation


def generate_markdown_report(
    violations: list[Violation], filename: str, output_path: Path | None = None
) -> str:
    """
    Generate a markdown validation report.

    Args:
        violations: List of violations to include in the report
        filename: Name of the validated file
        output_path: Optional path to save the report

    Returns:
        The markdown report as a string
    """
    # Group violations by severity
    critical_violations = [v for v in violations if v.severity == "CRITICAL"]
    high_violations = [v for v in violations if v.severity == "HIGH"]
    medium_violations = [v for v in violations if v.severity == "MEDIUM"]
    low_violations = [v for v in violations if v.severity == "LOW"]

    # Determine overall status
    if critical_violations:
        overall_status = "FAIL"
    elif high_violations:
        overall_status = "WARNING"
    else:
        overall_status = "PASS"

    # Generate report
    report = f"""# ATS Safety Validation Report

**Document:** {filename}
**Validation Date:** {datetime.now().strftime("%Y-%m-%d %H:%M:%S")}
**Overall Status:** {overall_status}

---

## Summary

- **Critical Issues:** {len(critical_violations)}
- **High Severity Issues:** {len(high_violations)}
- **Medium Severity Issues:** {len(medium_violations)}
- **Low Severity Issues:** {len(low_violations)}
- **Total Issues:** {len(violations)}

---

"""

    # Add sections for each severity level
    if critical_violations:
        report += _generate_severity_section(
            "Critical Issues (Must Fix)", critical_violations
        )

    if high_violations:
        report += _generate_severity_section(
            "High Severity Issues (Should Fix)", high_violations
        )

    if medium_violations:
        report += _generate_severity_section(
            "Medium Severity Issues (Consider Fixing)", medium_violations
        )

    if low_violations:
        report += _generate_severity_section(
            "Low Severity Issues (Optional)", low_violations
        )

    # Add recommendations
    report += _generate_recommendations_section()

    # Save to file if output path provided
    if output_path:
        output_path.parent.mkdir(parents=True, exist_ok=True)
        output_path.write_text(report, encoding="utf-8")

    return report


def _generate_severity_section(title: str, violations: list[Violation]) -> str:
    """Generate a section for a specific severity level."""
    section = f"## {title}\n\n"

    for violation in violations:
        section += f"### Issue at line {violation.line_number}\n\n"
        section += f"**Severity:** {violation.severity}\n\n"
        section += f"**Found:** `{violation.line_content}`\n\n"
        section += f"**Issue:** {violation.message}\n\n"
        if violation.suggestion:
            section += f"**Suggestion:** {violation.suggestion}\n\n"
        section += "---\n\n"

    return section


def _generate_recommendations_section() -> str:
    """Generate the recommendations section."""
    return """
## Recommendations

### Contact Information Best Practices

- **Always use explicit labels:** `Email:`, `Phone:`, `LinkedIn:`, `GitHub:`
- **Use standard formats:** `(555) 123-4567` or `555-123-4567` for phone numbers
- **Include protocols:** `https://linkedin.com/in/user` instead of `linkedin.com/in/user`
- **Avoid obfuscation:** Use `user@example.com` instead of `user [at] example [dot] com`

### General ATS Compatibility Tips

- Remove emojis and decorative characters that may not parse correctly
- Use standard section headers: `Professional Experience`, `Technical Skills`, `Education`
- Ensure consistent date formatting: `January 2020 - March 2024`
- Avoid tables and complex layouts that may not parse correctly
- Test your resume with multiple ATS systems when possible

---

*This report was generated by the ATS PDF Generator validation system.*
"""
