---
globs: mise.toml
alwaysApply: false
---

# Mise.toml Task Naming Standards

## Core Rule: `{action}-{language/tool}` Pattern

**ALWAYS** use this pattern for mise.toml tasks. Examples:

- `test-python` - Python unit tests
- `test-docker` - Docker image tests
- `lint-python` - Python linting
- `format-python` - Python formatting
- `typecheck-python` - Python type checking
- `check-python` - All Python quality checks
- `check-all` - All quality checks across languages
- `format-all` - Auto-fix formatting issues
- `convert-pdf` - PDF conversion
- `security-docker` - Docker security scanning
- `build-docker` - Docker builds
- `validate-docker` - Validate Dockerfiles
- `info-docker` - Show Docker image info
- `clean-docker` - Clean Docker images
- `publish-docker` - Publish Docker images
- `shell-docker` - Docker shell access

## Actions

- `test-*` - Testing and validation
- `lint-*` - Static analysis
- `format-*` - Code formatting
- `check-*` - Comprehensive quality checks (all checks for language/tool)
- `security-*` - Security scanning
- `build-*` - Building artifacts
- `publish-*` - Publishing
- `validate-*` - Validation operations
- `info-*` - Information display
- `clean-*` - Cleanup operations
- `typecheck-*` - Type checking
- `convert-*` - Format conversion
- `shell-*` - Interactive shell access

## Language/Tool Suffixes

- `python` - Python operations
- `shell` - Shell scripts
- `docker` - Docker/containers
- `markdown` - Documentation
- `security` - Security scanning
- `all` - Cross-language operations
- `pdf` - PDF operations

## Rules

- ✅ Use kebab-case: `test-python`
- ✅ Group with comments: `# Testing`
- ✅ Include inline comments for complex tasks
- ❌ Never use generic names: `test`, `lint`, `build`
- ❌ Never mix patterns: `pytest` alongside `test-python`
- ❌ Never use camelCase or snake_case

## Common Patterns

**Note**: This project uses `just` as the primary task runner. Mise tasks delegate to `just` commands for consistency.

```toml
# All tasks delegate to just for consistency
# This allows 'mise run <task>' to work for those who prefer it
# Following {action}-{language/tool} naming pattern

# Installation
install-all = "just install"

# CI/CD
ci-all = "just ci"

# Testing
test-all = "just test"

# Linting
lint-all = "just lint"

# Formatting
format-all = "just format"

# Docker Operations
build-docker = "just docker-build-all"
test-docker = "just docker-test"
validate-docker = "just docker-validate"
info-docker = "just docker-info"
clean-docker = "just docker-clean"
shell-docker = "just docker-shell"

# Publishing
publish-docker = "just publish"

# PDF Operations
convert-pdf = "just convert"
```

## Task Execution

This project uses `just` as the primary task runner with mise delegation:

- **Primary**: Use `just <command>` directly
- **Alternative**: Use `mise run <task>` which delegates to `just`
- **Benefits**: Consistent task runner, better error handling, parameterized commands

## When Renaming Tasks

1. Update `justfile` recipes first
2. Update `mise.toml` delegation tasks
3. Update CI/CD workflows
4. Test task execution
5. Remove deprecated tasks
